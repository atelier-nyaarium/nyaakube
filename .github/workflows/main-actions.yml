# Uses secrets:
#   DOCKER_PASSWORD
#   DOCKER_USERNAME
#   KUBECONFIG

name: Main Actions

on:
  push:
    branches:
      - main

  schedule:
    - cron: "0 8 * * 1"

jobs:
  build:
    name: Build & Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          tags: ${{ github.repository }}:latest
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: /tmp/image.tar
          retention-days: 7

  push:
    name: Push
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Load image
        run: docker load --input /tmp/image.tar

      - name: Docker login
        run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"

      - name: Docker push
        run: docker push ${{ github.repository }}:latest

  deploy:
    name: Deploy
    needs: push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Rollout restart
        run: |
          REPO_NAME="${{ github.repository }}"
          REPO_NAME="${REPO_NAME##*/}"

          echo ${{ secrets.KUBECONFIG }} | base64 -d > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml

          kubectl rollout restart deployment ${REPO_NAME}-deployment

  trivy:
    name: Trivy
    needs: push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Load image
        run: docker load --input /tmp/image.tar

      - name: Run Trivy scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ github.repository }}:latest"
          format: "sarif"
          output: "trivy-results.sarif"
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"
